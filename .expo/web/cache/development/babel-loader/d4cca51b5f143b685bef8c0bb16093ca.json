{"ast":null,"code":"var _jsxFileName = \"/home/tenoreo/Documents/React native-Typescript/pruebaexpo/src/navigators/bottomNavigator.tsx\";\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useRef } from 'react';\nimport HomeProfesor from \"../screens/Profesor/ChatProfesor\";\nimport ChatProfesor from \"../screens/Profesor/ChatProfesor\";\nimport CourseProfesor from \"../screens/Profesor/CourseProfesor\";\nimport NewsProfesor from \"../screens/Profesor/ModalNews\";\nimport ProfileProfesor from \"../screens/Profesor/ProfileProfesor\";\nvar Tab = createBottomTabNavigator();\nexport default function BottomNavigation() {\n  var _this = this;\n\n  var tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: {\n      tabBarLabelStyle: false,\n      tabBarStyle: {\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: 20,\n        marginHorizontal: 20,\n        height: 60,\n        borderRadius: 10,\n        shadowColor: '#000000',\n        shadowOpacity: 0.06,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Noticias\",\n    component: HomeProfesor,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"home\",\n          size: 20,\n          color: focused ? '#0948b3' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref2) {\n      var navigation = _ref2.navigation,\n          route = _ref2.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: 0,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Perfil\",\n    component: ProfileProfesor,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"user-alt\",\n          size: 20,\n          color: focused ? '#0948b3' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth(),\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"NewsProfesor\",\n    component: NewsProfesor,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            width: 55,\n            height: 55,\n            backgroundColor: '#0948b3',\n            borderRadius: 30,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: Platform.OS == \"android\" ? 50 : 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"plus\",\n          size: 20,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Cursos\",\n    component: CourseProfesor,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"book\",\n          size: 20,\n          color: focused ? '#0948b3' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref7) {\n      var navigation = _ref7.navigation,\n          route = _ref7.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 3,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Chat\",\n    component: ChatProfesor,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var focused = _ref8.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"weixin\",\n          size: 20,\n          color: focused ? '#0948b3' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref9) {\n      var navigation = _ref9.navigation,\n          route = _ref9.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 4,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      width: getWidth() - 20,\n      height: 2,\n      backgroundColor: '#0948b3',\n      position: 'absolute',\n      bottom: 78,\n      left: 50,\n      borderRadius: 20,\n      transform: [{\n        translateX: tabOffsetValue\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getWidth() {\n  var width = Dimensions.get(\"window\").width;\n  width = width - 80;\n  return width / 5;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/tenoreo/Documents/React native-Typescript/pruebaexpo/src/navigators/bottomNavigator.tsx"],"names":["React","NavigationContainer","createBottomTabNavigator","FontAwesome5","useRef","HomeProfesor","ChatProfesor","CourseProfesor","NewsProfesor","ProfileProfesor","Tab","BottomNavigation","tabOffsetValue","Animated","Value","current","tabBarLabelStyle","tabBarStyle","backgroundColor","position","bottom","marginHorizontal","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","tabBarIcon","focused","top","navigation","route","tabPress","e","spring","toValue","useNativeDriver","start","getWidth","justifyContent","alignItems","marginBottom","Platform","OS","left","transform","translateX","Dimensions","get","styles","StyleSheet","create","container","flex"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Animated, Dimensions, Image, Platform, StyleSheet,TouchableOpacity, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\n// Plus...\n//import plus from './assets/plus.png'\n\n// Font Awesome Icons...\nimport { FontAwesome5 } from '@expo/vector-icons'\nimport { useRef } from 'react';\n\n//Importaciones de las Pantallas\nimport HomeProfesor from '../screens/Profesor/ChatProfesor';\nimport ChatProfesor from '../screens/Profesor/ChatProfesor';\nimport CourseProfesor from '../screens/Profesor/CourseProfesor';\nimport NewsProfesor from '../screens/Profesor/ModalNews';\nimport ProfileProfesor from '../screens/Profesor/ProfileProfesor';\n\nconst Tab = createBottomTabNavigator();\n\n// Hiding Tab Names...\nexport default function BottomNavigation() {\n  // Animated Tab Indicator...\n  const tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return (\n    <NavigationContainer>\n      <Tab.Navigator screenOptions={{\n                tabBarLabelStyle:false,\n                tabBarStyle:{\n                    backgroundColor:'white',\n                    position:'absolute',\n                    bottom:20,\n                    marginHorizontal: 20,\n                    \n                    height:60,\n                    borderRadius:10,\n\n                    shadowColor:'#000000',\n                    shadowOpacity:0.06,\n                    shadowOffset:{\n                        width:10,\n                        height:10\n                    },\n                    paddingHorizontal: 20,\n\n                },\n            }}>\n\n        {\n          // Tab Screens....\n\n          // Tab ICons....\n        }\n        <Tab.Screen name={\"Noticias\"} component={HomeProfesor} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"home\"\n                size={20}\n                color={focused ? '#0948b3' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: 0,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n        <Tab.Screen name={\"Perfil\"} component={ProfileProfesor} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"user-alt\"\n                size={20}\n                color={focused ? '#0948b3' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth(),\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n\n        {\n\n          // Extra Tab Screen For Action Button..\n        }\n\n        <Tab.Screen name={\"NewsProfesor\"} component={NewsProfesor} options={{\n          tabBarIcon: ({ focused }) => (\n\n            <TouchableOpacity>\n              <View style={{\n                width: 55,\n                height: 55,\n                backgroundColor: '#0948b3',\n                borderRadius: 30,\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginBottom: Platform.OS == \"android\" ? 50 : 30\n              }}>\n                  <FontAwesome5\n                name=\"plus\"\n                size={20}\n                color='white'\n              ></FontAwesome5>\n                  \n                {/* <Image source={plus} style={{\n                  width: 22,\n                  height: 22,\n                  tintColor: 'white',\n                }}></Image> */}\n              </View>\n            </TouchableOpacity>\n          )\n        }}></Tab.Screen>\n\n        <Tab.Screen name={\"Cursos\"} component={CourseProfesor} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"book\"\n                size={20}\n                color={focused ? '#0948b3' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth() * 3,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n        <Tab.Screen name={\"Chat\"} component={ChatProfesor} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"weixin\"\n                size={20}\n                color={focused ? '#0948b3' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth() * 4,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n      </Tab.Navigator>\n\n      <Animated.View style={{\n        width: getWidth() - 20,\n        height: 2,\n        backgroundColor: '#0948b3',\n        position: 'absolute',\n        bottom: 78,\n        // Horizontal Padding = 20...\n        left: 50,\n        borderRadius: 20,\n        transform: [\n          { translateX: tabOffsetValue }\n        ]\n      }}>\n\n      </Animated.View>\n    </NavigationContainer>\n  );\n}\n\nfunction getWidth() {\n  let width = Dimensions.get(\"window\").width\n\n  // Horizontal Padding = 20...\n  width = width - 80\n\n  // Total five Tabs...\n  return width / 5\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}